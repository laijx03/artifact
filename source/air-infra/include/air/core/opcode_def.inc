//-*-c++-*-
//=============================================================================
//
// Copyright (c) XXXX-XXXX., Ltd
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//=============================================================================

/**
 * @brief Defines all CORE OPCODE in this file with the following format:
 *   DEF_OPCODE(NAME, name, kid_num, fld_num, property)
 *
 */

#ifndef DEF_OP_BLOCK
#define DEF_OP_BLOCK(NAME, name, kid_num, fld_num, property) \
  DEF_OPCODE(NAME, name, kid_num, fld_num, property)
#endif

DEF_OPCODE(INVALID, invalid, 0, 0, 0)
DEF_OPCODE(END_STMT_LIST, end_stmt_list, 0, 0, PROP_STMT | PROP_END_BB)
DEF_OPCODE(VOID, void, 0, 0, PROP_EXPR)
DEF_OP_BLOCK(BLOCK, block, 0, 2, PROP_SCF | PROP_EXPR)
DEF_OPCODE(ADD, add, 2, 0, PROP_EXPR)
DEF_OPCODE(SUB, sub, 2, 0, PROP_EXPR)
DEF_OPCODE(MUL, mul, 2, 0, PROP_EXPR)
DEF_OPCODE(SHL, shl, 2, 0, PROP_EXPR)
DEF_OPCODE(ASHR, ashr, 2, 0, PROP_EXPR)
DEF_OPCODE(LSHR, lshr, 2, 0, PROP_EXPR)
DEF_OPCODE(EQ, eq, 2, 0, PROP_EXPR | PROP_COMPARE)
DEF_OPCODE(NE, ne, 2, 0, PROP_EXPR | PROP_COMPARE)
DEF_OPCODE(LT, lt, 2, 0, PROP_EXPR | PROP_COMPARE)
DEF_OPCODE(LE, le, 2, 0, PROP_EXPR | PROP_COMPARE)
DEF_OPCODE(GT, gt, 2, 0, PROP_EXPR | PROP_COMPARE)
DEF_OPCODE(GE, ge, 2, 0, PROP_EXPR | PROP_COMPARE)
DEF_OPCODE(LD, ld, 0, 2, PROP_EXPR | PROP_ATTR | PROP_LEAF | PROP_LOAD | PROP_SYM | PROP_ACC_TYPE)
DEF_OPCODE(ILD, ild, 1, 2, PROP_EXPR | PROP_ATTR | PROP_LOAD | PROP_ACC_TYPE)
DEF_OPCODE(LDF, ldf, 0, 3, PROP_EXPR | PROP_LEAF | PROP_LOAD | PROP_SYM | PROP_ACC_TYPE | PROP_FIELD_ID | PROP_ATTR)
DEF_OPCODE(LDO, ldo, 0, 4, PROP_EXPR | PROP_LEAF | PROP_LOAD | PROP_SYM | PROP_ACC_TYPE | PROP_OFFSET)
DEF_OPCODE(LDP, ldp, 0, 2, PROP_EXPR | PROP_LEAF | PROP_ATTR | PROP_LOAD | PROP_PREG | PROP_ACC_TYPE)
DEF_OPCODE(LDPF, ldpf, 0, 3, PROP_EXPR | PROP_LEAF | PROP_LOAD | PROP_PREG | PROP_ACC_TYPE | PROP_FIELD_ID | PROP_ATTR)
DEF_OPCODE(LDC, ldc, 0, 1, PROP_EXPR | PROP_LEAF | PROP_CONST_ID)
DEF_OPCODE(LDA, lda, 0, 1, PROP_EXPR | PROP_LEAF | PROP_SYM)
DEF_OPCODE(LDCA, ldca, 0, 1, PROP_EXPR | PROP_LEAF | PROP_CONST_ID)
DEF_OPCODE(FUNC_ENTRY, func_entry, 1, 1, PROP_SCF | PROP_STMT | PROP_ENTRY | PROP_EX_CHILD)
DEF_OPCODE(IDNAME, idname, 0, 1, PROP_EXPR | PROP_ATTR | PROP_LEAF | PROP_SYM)
DEF_OPCODE(ST, st, 1, 2, PROP_STMT | PROP_STORE | PROP_ATTR | PROP_SYM | PROP_ACC_TYPE)
DEF_OPCODE(IST, ist, 2, 2, PROP_STMT | PROP_STORE | PROP_ATTR | PROP_ACC_TYPE)
DEF_OPCODE(STF, stf, 1, 3, PROP_STMT | PROP_STORE | PROP_SYM | PROP_ACC_TYPE | PROP_FIELD_ID | PROP_ATTR)
DEF_OPCODE(STO, sto, 1, 4, PROP_STMT | PROP_STORE | PROP_SYM | PROP_ACC_TYPE | PROP_OFFSET)
DEF_OPCODE(STP, stp, 1, 2, PROP_STMT | PROP_STORE | PROP_ATTR | PROP_PREG | PROP_ACC_TYPE)
DEF_OPCODE(STPF, stpf, 1, 3, PROP_STMT | PROP_STORE | PROP_PREG | PROP_ACC_TYPE | PROP_FIELD_ID | PROP_ATTR)
DEF_OPCODE(ENTRY, entry, 0, 2, PROP_SCF | PROP_STMT)
DEF_OPCODE(RET, ret, 0, 0, PROP_STMT | PROP_LEAF)
DEF_OPCODE(RETV, retv, 1, 0, PROP_STMT | PROP_ATTR)
DEF_OPCODE(PRAGMA, pragma, 0, 3, PROP_STMT | PROP_LEAF)
DEF_OPCODE(CALL, call, 0, 3, PROP_STMT | PROP_CALL | PROP_ENTRY | PROP_RET_VAR | PROP_FLAGS | PROP_EX_CHILD | PROP_ATTR)
DEF_OPCODE(DO_LOOP, do_loop, 4, 1, PROP_SCF | PROP_STMT)
DEF_OPCODE(INTCONST, intconst, 0, 2, PROP_EXPR | PROP_LEAF)
DEF_OPCODE(ZERO, zero, 0, 0, PROP_EXPR | PROP_LEAF|PROP_ATTR)
DEF_OPCODE(ONE, one, 0, 0, PROP_EXPR | PROP_LEAF|PROP_ATTR)
DEF_OPCODE(IF, if, 3, 0, PROP_SCF | PROP_STMT)
DEF_OPCODE(ARRAY, array, 1, 0, PROP_EXPR | PROP_EX_CHILD)
DEF_OPCODE(VALIDATE, validate, 4, 0, PROP_STMT | PROP_LIB_CALL)
DEF_OPCODE(DUMP_VAR, dump_var, 3, 0, PROP_STMT | PROP_LIB_CALL)
DEF_OPCODE(INTRN_CALL, intrn_call, 0, 3, PROP_STMT | PROP_RET_VAR | PROP_FLAGS | PROP_EX_CHILD | PROP_ATTR)
DEF_OPCODE(INTRN_OP, intrn_op, 0, 1, PROP_EXPR | PROP_FLAGS | PROP_EX_CHILD | PROP_ATTR)
DEF_OPCODE(COMMENT, comment, 0, 1, PROP_STMT)

#undef DEF_OP_BLOCK
