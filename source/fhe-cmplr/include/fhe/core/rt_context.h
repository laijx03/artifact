//-*-c++-*-
//=============================================================================
//
// Copyright (c) XXXX-XXXX., Ltd
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//=============================================================================

#ifndef FHE_CORE_RT_CONTEXT_H
#define FHE_CORE_RT_CONTEXT_H

#include <vector>

#include "fhe/core/scheme_info.h"

namespace fhe {
namespace rt_context {

//! @brief VL class is used to retrive the data and data length from rtlib
class VL {
public:
  VL() = default;
  size_t           Len() const { return _len; }
  const uint64_t*  Data() const { return _data; }
  size_t*          Len_ptr() { return &_len; }
  const uint64_t** Data_ptr() { return &_data; }
  void             Set_len(size_t len) { _len = len; }
  void             Set_data(const uint64_t* data) { _data = data; }

private:
  size_t          _len  = 0;
  const uint64_t* _data = NULL;
};

//! @brief Register runtime context with speicified parameters
void Register_context(const fhe::core::CTX_PARAM& parm);

//! @brief Release context info generated by runtime
void Release_context();

//! @brief Fetch the q prime values from runtime context
void Fetch_q_primes(std::vector<uint64_t>& q_primes);

//! @brief Get qlhmodp at specified index
void Get_qlhmodp_at(std::vector<VL>& vals, uint32_t dim1_idx,
                    uint32_t dim2_idx);

//! @brief Get phatmodq values
void Get_phmodq(std::vector<VL>& vals);
}  // namespace rt_context
}  // namespace fhe
#endif